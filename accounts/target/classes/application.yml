server:
  port: 8080
spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  config:
    import: "optional:configserver:http://localhost:8071/"
  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
management:
  endpoints:
    web:
      exposure:
        include: "*"
  info:
    env:
      enabled: true
  endpoint:
    shutdown:
      enabled: true

endpoints:
  shutdown:
    enabled: true


eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

# details about the microservices on the eureka dashboard
# actuator end point url these are
info:
  app:
    name: "accounts"
    description: "Bank application - accounts."
    version: "1.0.0"


resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10 # how many requests it has to initially monitor then decide for open and closed
      permittedNumberOfCallsInHalfOpenState: 2 # when in open state, how many request it will pass in half open status
      failureRateThreshold: 50 # if 50% of the requests are failed then move from closed to open state.
      waitDurationInOpenState: 10000 # wait for 10s before moving to half open state.


resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 3
      waitDuration: 100
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException